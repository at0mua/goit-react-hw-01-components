{"version":3,"sources":["components/Profile/Profile.module.scss","components/FriendList/FriendList.module.scss","components/Statistics/Statistics.module.scss","components/TransactionHistory/TransactionHistory.module.scss","components/Title/Title.module.scss","components/Title/Title.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistoryItem.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Title","title","className","styles","defaulProps","Profile","props","name","tag","location","avatar","stats","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","Statistics","getRandColor","r","Math","floor","random","g","b","statistics","statList","map","stat","item","key","id","style","backgroundColor","percentage","FriendListItem","friend","isOnline","online","offline","width","FriendList","friends","friendList","TransactionHistoryItem","type","amount","currency","TransactionHistory","items","transactionHistory","transaction","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e81983b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1onJt\",\"description\":\"Profile_description__3l6ov\",\"avatar\":\"Profile_avatar__F_Bk3\",\"name\":\"Profile_name__36hFW\",\"tag\":\"Profile_tag__39YsI\",\"location\":\"Profile_location__2Cybf\",\"stats\":\"Profile_stats__3ma4E\",\"label\":\"Profile_label__2ghR1\",\"quantity\":\"Profile_quantity__1p3vi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1TTNH\",\"item\":\"FriendList_item__3EmF4\",\"status\":\"FriendList_status__2u1AM\",\"online\":\"FriendList_online__3rFwK FriendList_status__2u1AM\",\"offline\":\"FriendList_offline__-mnC- FriendList_status__2u1AM\",\"avatar\":\"FriendList_avatar__3yaLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__32aoT\",\"title\":\"Statistics_title__2e50J\",\"statList\":\"Statistics_statList__2luw-\",\"item\":\"Statistics_item__2Ux-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1p4fk\",\"name\":\"TransactionHistory_name__2GDhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1Nci8\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Title.module.scss';\n\nconst Title = ({ title }) => {\n  return <h2 className={styles.title}>{title}</h2>;\n};\n\nTitle.defaulProps = {\n  title: 'Задание',\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.scss';\n\nfunction Profile(props) {\n  const { name, tag, location, avatar, stats } = props;\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.defaultProps = {\n  avatar: 'https://dummyimage.com/128/5c3e5c/fff.png&text=(▲_▲)',\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.scss';\n\nfunction Statistics({ title, stats }) {\n  const getRandColor = () => {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgb(${r},${g},${b})`;\n  };\n\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.statList}>\n        {stats.map(stat => (\n          <li\n            className={styles.item}\n            key={stat.id}\n            style={{ backgroundColor: getRandColor() }}\n          >\n            <span className={styles.label}>{stat.label}</span>\n            <span className={styles.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stat: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.scss';\n\nconst FriendListItem = friend => {\n  const { avatar, name, isOnline } = friend;\n  return (\n    <li className={styles.item}>\n      {isOnline ? (\n        <span className={styles.online}></span>\n      ) : (\n        <span className={styles.offline}></span>\n      )}\n      <img className={styles.avatar} src={avatar} alt=\"avatar\" width=\"80\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.defaultProps = {\n  avatar: 'https://dummyimage.com/128/5c3e5c/fff.png&text=(▲_▲)',\n  isOnline: false,\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.scss';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(friend => (\n        <FriendListItem key={friend.id} {...friend} />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.array.isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.scss';\n\nconst TransactionHistoryItem = ({ type, amount, currency }) => {\n  return (\n    <tr>\n      <td className={styles.name}>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nTransactionHistoryItem.defaultProps = {\n  type: 'not available',\n  amount: 'not available',\n  currency: 'not available',\n};\n\nTransactionHistoryItem.propTypes = {\n  type: PropTypes.string,\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n};\n\nexport default TransactionHistoryItem;\n","import React from 'react';\nimport TransactionHistoryItem from './TransactionHistoryItem';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.scss';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(transaction => (\n          <TransactionHistoryItem key={transaction.id} {...transaction} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Title from './components/Title/Title';\nimport Profile from './components/Profile/Profile.js';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport user from './components/Profile/user.json';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport friends from './components/FriendList/friends.json';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nexport default function App() {\n  return (\n    <>\n      <Title title=\"Задание 1 - Профиль социальной сети\" />\n\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Title title=\"Задание 2 - Секция статистики\" />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n      <Title title=\"Задание 3 - Список друзей\" />\n\n      <FriendList friends={friends} />\n\n      <Title title=\"Задание 4 - История транзакций\" />\n\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}